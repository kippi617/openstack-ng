---

### actually needed on nodes and there it's covered by openstack-* 
### dependencies
## - name: install python-MySQL
##   yum: name=MySQL-python state=present
 
- name: install mysql server
  apt: name={{ item }} state=present
  with_items:
  	- mysql-server
  	- python-mysqldb

# - name: configure MySQLd
#   copy: src=my.cnf dest=/etc/mysql/my.cnf
#   notify: restart mysql

- name: Enable and startup service
  service: name=mysql enabled=yes


- name: drop nova DB
  mysql_db: name={{ mysql_nova_db }} state=absent  login_user={{ mysql_login_user }}  login_password={{ mysql_login_password }}
  when: nova_force_init == True

- name: create nova DB
  mysql_db: name={{ mysql_nova_db }} state=present  login_user={{ mysql_login_user }}  login_password={{ mysql_login_password }}

- name: create nova user
  mysql_user: name={{ mysql_nova_user }} state=present host='{{ item }}' password="{{ mysql_nova_password }}" priv={{ mysql_nova_db }}.*:ALL  login_user={{ mysql_login_user }} login_password={{ mysql_login_password }}
  with_items: groups['nova']

#### Maybe better to do it from each node?
### - name: Add nodes to MySQL allowed list
###   shell: echo "{{ item }}" >> /tmp/log
###   with_items: ( groups['keystone']+groups['qpid'] ) | unique

# - name: MySQL | add MySQL iptable rule
#   command: /sbin/iptables -I INPUT 1 -p tcp --dport 3306 -j ACCEPT -m comment --comment "MySQL"
#   sudo: true
#   when: iptablesrules.stdout.find("MySQL") == -1
 
# - name: save iptables
#   command: iptables-save
#   sudo: true
 
# - name: restart iptables
#   service: name= ufw state=restarted
#   sudo: true
